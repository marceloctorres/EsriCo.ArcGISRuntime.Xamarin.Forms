### YamlMime:ManagedReference
items:
- uid: EsriCo.ArcGISRuntime.Xamarin.Forms.Converters.GeographicCoordinateConverter
  commentId: T:EsriCo.ArcGISRuntime.Xamarin.Forms.Converters.GeographicCoordinateConverter
  id: GeographicCoordinateConverter
  parent: EsriCo.ArcGISRuntime.Xamarin.Forms.Converters
  children:
  - EsriCo.ArcGISRuntime.Xamarin.Forms.Converters.GeographicCoordinateConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  - EsriCo.ArcGISRuntime.Xamarin.Forms.Converters.GeographicCoordinateConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  langs:
  - csharp
  - vb
  name: GeographicCoordinateConverter
  nameWithType: GeographicCoordinateConverter
  fullName: EsriCo.ArcGISRuntime.Xamarin.Forms.Converters.GeographicCoordinateConverter
  type: Class
  source:
    remote:
      path: Esrico.ArcGISRuntime.Xamarin.Forms/Converters/GeographicCoordinateConverter.cs
      branch: master
      repo: https://github.com/marceloctorres/EsriCo.ArcGISRuntime.Xamarin.Forms
    id: GeographicCoordinateConverter
    path: Converters/GeographicCoordinateConverter.cs
    startLine: 11
  assemblies:
  - EsriCo.ArcGISRuntime.Xamarin.Forms
  namespace: EsriCo.ArcGISRuntime.Xamarin.Forms.Converters
  syntax:
    content: 'public class GeographicCoordinateConverter : IValueConverter'
    content.vb: >-
      Public Class GeographicCoordinateConverter
          Implements IValueConverter
  inheritance:
  - System.Object
  implements:
  - Xamarin.Forms.IValueConverter
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EsriCo.ArcGISRuntime.Xamarin.Forms.Converters.GeographicCoordinateConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  commentId: M:EsriCo.ArcGISRuntime.Xamarin.Forms.Converters.GeographicCoordinateConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  id: Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: EsriCo.ArcGISRuntime.Xamarin.Forms.Converters.GeographicCoordinateConverter
  langs:
  - csharp
  - vb
  name: Convert(Object, Type, Object, CultureInfo)
  nameWithType: GeographicCoordinateConverter.Convert(Object, Type, Object, CultureInfo)
  fullName: EsriCo.ArcGISRuntime.Xamarin.Forms.Converters.GeographicCoordinateConverter.Convert(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
  type: Method
  source:
    remote:
      path: Esrico.ArcGISRuntime.Xamarin.Forms/Converters/GeographicCoordinateConverter.cs
      branch: master
      repo: https://github.com/marceloctorres/EsriCo.ArcGISRuntime.Xamarin.Forms
    id: Convert
    path: Converters/GeographicCoordinateConverter.cs
    startLine: 22
  assemblies:
  - EsriCo.ArcGISRuntime.Xamarin.Forms
  namespace: EsriCo.ArcGISRuntime.Xamarin.Forms.Converters
  summary: "\nConvert a double value that is a decimal degree angle to its degree, minutes and \nseconds display\n"
  example: []
  syntax:
    content: public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
    parameters:
    - id: value
      type: System.Object
      description: ''
    - id: targetType
      type: System.Type
      description: ''
    - id: parameter
      type: System.Object
      description: ''
    - id: culture
      type: System.Globalization.CultureInfo
      description: ''
    return:
      type: System.Object
      description: ''
    content.vb: Public Function Convert(value As Object, targetType As Type, parameter As Object, culture As CultureInfo) As Object
  overload: EsriCo.ArcGISRuntime.Xamarin.Forms.Converters.GeographicCoordinateConverter.Convert*
  implements:
  - Xamarin.Forms.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EsriCo.ArcGISRuntime.Xamarin.Forms.Converters.GeographicCoordinateConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  commentId: M:EsriCo.ArcGISRuntime.Xamarin.Forms.Converters.GeographicCoordinateConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  id: ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: EsriCo.ArcGISRuntime.Xamarin.Forms.Converters.GeographicCoordinateConverter
  langs:
  - csharp
  - vb
  name: ConvertBack(Object, Type, Object, CultureInfo)
  nameWithType: GeographicCoordinateConverter.ConvertBack(Object, Type, Object, CultureInfo)
  fullName: EsriCo.ArcGISRuntime.Xamarin.Forms.Converters.GeographicCoordinateConverter.ConvertBack(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
  type: Method
  source:
    remote:
      path: Esrico.ArcGISRuntime.Xamarin.Forms/Converters/GeographicCoordinateConverter.cs
      branch: master
      repo: https://github.com/marceloctorres/EsriCo.ArcGISRuntime.Xamarin.Forms
    id: ConvertBack
    path: Converters/GeographicCoordinateConverter.cs
    startLine: 43
  assemblies:
  - EsriCo.ArcGISRuntime.Xamarin.Forms
  namespace: EsriCo.ArcGISRuntime.Xamarin.Forms.Converters
  summary: "\n\n"
  example: []
  syntax:
    content: public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
    parameters:
    - id: value
      type: System.Object
      description: ''
    - id: targetType
      type: System.Type
      description: ''
    - id: parameter
      type: System.Object
      description: ''
    - id: culture
      type: System.Globalization.CultureInfo
      description: ''
    return:
      type: System.Object
      description: ''
    content.vb: Public Function ConvertBack(value As Object, targetType As Type, parameter As Object, culture As CultureInfo) As Object
  overload: EsriCo.ArcGISRuntime.Xamarin.Forms.Converters.GeographicCoordinateConverter.ConvertBack*
  implements:
  - Xamarin.Forms.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EsriCo.ArcGISRuntime.Xamarin.Forms.Converters
  commentId: N:EsriCo.ArcGISRuntime.Xamarin.Forms.Converters
  name: EsriCo.ArcGISRuntime.Xamarin.Forms.Converters
  nameWithType: EsriCo.ArcGISRuntime.Xamarin.Forms.Converters
  fullName: EsriCo.ArcGISRuntime.Xamarin.Forms.Converters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Xamarin.Forms.IValueConverter
  commentId: T:Xamarin.Forms.IValueConverter
  parent: Xamarin.Forms
  isExternal: true
  name: IValueConverter
  nameWithType: IValueConverter
  fullName: Xamarin.Forms.IValueConverter
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Xamarin.Forms
  commentId: N:Xamarin.Forms
  isExternal: true
  name: Xamarin.Forms
  nameWithType: Xamarin.Forms
  fullName: Xamarin.Forms
- uid: EsriCo.ArcGISRuntime.Xamarin.Forms.Converters.GeographicCoordinateConverter.Convert*
  commentId: Overload:EsriCo.ArcGISRuntime.Xamarin.Forms.Converters.GeographicCoordinateConverter.Convert
  name: Convert
  nameWithType: GeographicCoordinateConverter.Convert
  fullName: EsriCo.ArcGISRuntime.Xamarin.Forms.Converters.GeographicCoordinateConverter.Convert
- uid: Xamarin.Forms.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  commentId: M:Xamarin.Forms.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: Xamarin.Forms.IValueConverter
  isExternal: true
  name: Convert(Object, Type, Object, CultureInfo)
  nameWithType: IValueConverter.Convert(Object, Type, Object, CultureInfo)
  fullName: Xamarin.Forms.IValueConverter.Convert(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: Xamarin.Forms.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: Convert
    nameWithType: IValueConverter.Convert
    fullName: Xamarin.Forms.IValueConverter.Convert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Xamarin.Forms.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: Convert
    nameWithType: IValueConverter.Convert
    fullName: Xamarin.Forms.IValueConverter.Convert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: EsriCo.ArcGISRuntime.Xamarin.Forms.Converters.GeographicCoordinateConverter.ConvertBack*
  commentId: Overload:EsriCo.ArcGISRuntime.Xamarin.Forms.Converters.GeographicCoordinateConverter.ConvertBack
  name: ConvertBack
  nameWithType: GeographicCoordinateConverter.ConvertBack
  fullName: EsriCo.ArcGISRuntime.Xamarin.Forms.Converters.GeographicCoordinateConverter.ConvertBack
- uid: Xamarin.Forms.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  commentId: M:Xamarin.Forms.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: Xamarin.Forms.IValueConverter
  isExternal: true
  name: ConvertBack(Object, Type, Object, CultureInfo)
  nameWithType: IValueConverter.ConvertBack(Object, Type, Object, CultureInfo)
  fullName: Xamarin.Forms.IValueConverter.ConvertBack(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: Xamarin.Forms.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: ConvertBack
    nameWithType: IValueConverter.ConvertBack
    fullName: Xamarin.Forms.IValueConverter.ConvertBack
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Xamarin.Forms.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: ConvertBack
    nameWithType: IValueConverter.ConvertBack
    fullName: Xamarin.Forms.IValueConverter.ConvertBack
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
